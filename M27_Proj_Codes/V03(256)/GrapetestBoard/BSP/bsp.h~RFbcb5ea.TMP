/*
*********************************************************************************************************
*                                     MICIRUM BOARD SUPPORT PACKAGE
*
*                             (c) Copyright 2007; Micrium, Inc.; Weston, FL
*
*               All rights reserved.  Protected by international copyright laws.
*               Knowledge of the source code may NOT be used to develop a similar product.
*               Please help us continue to provide the Embedded community with the finest
*               software available.  Your honesty is greatly appreciated.
*********************************************************************************************************
*/

/*
*********************************************************************************************************
*
*                                        BOARD SUPPORT PACKAGE
*
*                                     ST Microelectronics STM32
*                                              on the
*
*                                     Micrium uC-Eval-STM32F107
*                                        Evaluation Board
*
* Filename      : bsp.h
* Version       : V1.00
* Programmer(s) : EHS
*********************************************************************************************************
*/

/*
*********************************************************************************************************
*                                                 MODULE
*
* Note(s) : (1) This header file is protected from multiple pre-processor inclusion through use of the
*               BSP present pre-processor macro definition.
*********************************************************************************************************
*/

#ifndef  BSP_PRESENT
#define  BSP_PRESENT


/*
*********************************************************************************************************
*                                                 EXTERNS
*********************************************************************************************************
*/

#ifdef   BSP_MODULE
#define  BSP_EXT
#else
#define  BSP_EXT  extern
#endif


/*
*********************************************************************************************************
*                                              INCLUDE FILES
*********************************************************************************************************
*/

#include  <stdarg.h>
#include  <stdio.h>

#include  <cpu.h>
#include  <cpu_core.h>

#include  <lib_ascii.h>
#include  <lib_def.h>
#include  <lib_mem.h>
#include  <lib_str.h>

#include "stm32f10x.h"

#include  <app_cfg.h>

#include  <bsp_os.h>
#include  <bsp_ser.h>

#include <sys.h>
#include <modbus.h>
#include <app.h>
#include <bsp_iicbusDrive.h>
#include <bsp_keyscan.h>
#include <bsp_motioncontrol.h>
#include <bsp_Controltargetconf.h>
#include "bspadc.h"
#include "DataScope_DP.h"
/*
*********************************************************************************************************
*                                          GPIO PIN DEFINITIONS
*********************************************************************************************************
*/

                                                                /* -------------------- GPIOA PINS -------------------- */
#define  BSP_GPIOA_Y8                            DEF_BIT_00
#define  BSP_GPIOA_Y9                            DEF_BIT_01
#define  BSP_GPIOA_MII_MDIO                      DEF_BIT_02
#define  BSP_GPIOA_MII_COL                       DEF_BIT_03
#define  BSP_GPIOA_IN7                           DEF_BIT_04
#define  BSP_GPIOA_IN6                           DEF_BIT_05
#define  BSP_GPIOA_IN5                           DEF_BIT_06
#define  BSP_GPIOA_IN4                           DEF_BIT_07
#define  BSP_GPIOA_PIN8                          DEF_BIT_08     
#define  BSP_GPIOA_USB_VBUS                      DEF_BIT_09
#define  BSP_GPIOA_USB_ID                        DEF_BIT_10
#define  BSP_GPIOA_Y1                            DEF_BIT_11    //Y1
#define  BSP_GPIOA_USB_DP                        DEF_BIT_12
#define  BSP_GPIOA_TMS_SWDIO                     DEF_BIT_13
#define  BSP_GPIOA_TCK_SWCLK                     DEF_BIT_14
#define  BSP_GPIOA_TDI                           DEF_BIT_15


                                                                /* -------------------- GPIOB PINS -------------------- */
#define  BSP_GPIOB_IN1                           DEF_BIT_00
#define  BSP_GPIOB_IN0                           DEF_BIT_01
#define  BSP_GPIOB_PIN_02                        DEF_BIT_02
#define  BSP_GPIOB_Y3                            DEF_BIT_03

#define  BSP_GPIOB_Y4                            DEF_BIT_04
#define  BSP_GPIOB_Y5                            DEF_BIT_05
#define  BSP_GPIOB_Y6                            DEF_BIT_06
#define  BSP_GPIOB_PIN8                          DEF_BIT_07
#define  BSP_GPIOB_Y7                            DEF_BIT_08
#define  BSP_GPIOB_PIN9                          DEF_BIT_09

#define  BSP_GPIOB_MII_RX_ERR                    DEF_BIT_10
#define  BSP_GPIOB_MII_TX_ERR                    DEF_BIT_11
#define  BSP_GPIOB_MII_TXD0                      DEF_BIT_12
#define  BSP_GPIOB_MII_TXD1                      DEF_BIT_13
#define  BSP_GPIOB_PIN_14                        DEF_BIT_14
#define  BSP_GPIOB_PIN_15                        DEF_BIT_15


                                                                /* -------------------- GPIOC PINS -------------------- */
#define  BSP_GPIOC_PIN_00                        DEF_BIT_00
#define  BSP_GPIOC_MII_MDC                       DEF_BIT_01
#define  BSP_GPIOC_MII_TXD2                      DEF_BIT_02
#define  BSP_GPIOC_MII_TX_CLK                    DEF_BIT_03
#define  BSP_GPIOC_IN3                           DEF_BIT_04
#define  BSP_GPIOC_IN2                           DEF_BIT_05
#define  BSP_GPIOC_PIN_06                        DEF_BIT_06
#define  BSP_GPIOC_PIN_07                        DEF_BIT_07
#define  BSP_GPIOC_PIN_08                        DEF_BIT_08
#define  BSP_GPIOC_Y0                            DEF_BIT_09   //Y0 
#define  BSP_GPIOC_PIN_10                        DEF_BIT_10
#define  BSP_GPIOC_PIN_11                        DEF_BIT_11
#define  BSP_GPIOC_PIN_12                        DEF_BIT_12
#define  BSP_GPIOC_PIN_13                        DEF_BIT_13


                                                                /* -------------------- GPIOD PINS -------------------- */
#define  BSP_GPIOD_CAN1_RX                       DEF_BIT_00
#define  BSP_GPIOD_CAN1_TX                       DEF_BIT_01
#define  BSP_GPIOD_PIN_02                        DEF_BIT_02
#define  BSP_GPIOD_USART2_CTS                    DEF_BIT_03
#define  BSP_GPIOD_USART2_RTS                    DEF_BIT_04
#define  BSP_GPIOD_USART2_TX                     DEF_BIT_05
#define  BSP_GPIOD_USART2_RX                     DEF_BIT_06
#define  BSP_GPIOD_Y2                            DEF_BIT_07
#define  BSP_GPIOD_MII_RX_DV                     DEF_BIT_08
#define  BSP_GPIOD_MII_RXD0                      DEF_BIT_09
#define  BSP_GPIOD_MII_RXD1                      DEF_BIT_10
#define  BSP_GPIOD_MII_RXD2                      DEF_BIT_11
#define  BSP_GPIOD_MII_RXD3                      DEF_BIT_12
#define  BSP_GPIOD_PIN_13                        DEF_BIT_13
#define  BSP_GPIOD_PIN_14                        DEF_BIT_14
#define  BSP_GPIOD_PIN_15                        DEF_BIT_15

                                                                /* -------------------- GPIOE PINS -------------------- */
#define  BSP_GPIOE_PIN_00                        DEF_BIT_00
#define  BSP_GPIOE_USB_PWR_SW_ON                 DEF_BIT_01
#define  BSP_GPIOE_PIN_02                        DEF_BIT_02
#define  BSP_GPIOE_PIN_03                        DEF_BIT_03
#define  BSP_GPIOE_PIN_04                        DEF_BIT_04
#define  BSP_GPIOE_MII_INT                       DEF_BIT_05
#define  BSP_GPIOE_SD_CARD_DETECT                DEF_BIT_06
#define  BSP_GPIOE_PIN_07                        DEF_BIT_07
#define  BSP_GPIOE_PIN_08                        DEF_BIT_08
#define  BSP_GPIOE_PIN_09                        DEF_BIT_09
#define  BSP_GPIOE_PIN_10                        DEF_BIT_10
#define  BSP_GPIOE_PIN_11                        DEF_BIT_11
#define  BSP_GPIOE_PIN_12                        DEF_BIT_12
#define  BSP_GPIOE_PIN_13                        DEF_BIT_13
#define  BSP_GPIOE_PIN_14                        DEF_BIT_14
#define  BSP_GPIOE_PIN_15                        DEF_BIT_15



/*
*********************************************************************************************************
*                                               I/O Setting
*********************************************************************************************************
*/
// ‰≥ˆ
#define   BSP_POUT01       PBout(0)
#define   BSP_POUT02       PBout(1)
#define   BSP_POUT03       PEout(7)
#define   BSP_POUT04       PBout(2)
#define   BSP_POUT05       PEout(9)
#define   BSP_POUT06       PEout(8)
#define   BSP_POUT07       PEout(11)
#define   BSP_POUT08       PEout(10)
#define   BSP_POUT09       PEout(13)
#define   BSP_POUT10       PEout(12)
#define   BSP_POUT11       PEout(14)
#define   BSP_POUT12       PEout(15)
#define   BSP_LEFTDIR1     PEout(6)
#define   BSP_RIGHTDIR2    PEout(5)

/// ‰»Î
#define   BSP_PIN08        PEin(2)  
#define   BSP_PIN07        PEin(1)
#define   BSP_PIN06        PEin(0)
#define   BSP_PIN05        PBin(9)
#define   BSP_PIN04        PDin(7)
#define   BSP_PIN03        PDin(6)
#define   BSP_PIN02        PDin(5)
#define   BSP_PIN01        PDin(4)

#define   BSP_PIN16        PDin(15)
#define   BSP_PIN15        PDin(14)
#define   BSP_PIN14        PDin(13)
#define   BSP_PIN13        PDin(12)
#define   BSP_PIN12        PDin(11)
#define   BSP_PIN11        PDin(10)
#define   BSP_PIN10        PDin(9)
#define   BSP_PIN09        PDin(8)

#define   BSP_PIN17        PDin(3)
#define   BSP_PIN18        PDin(1)
#define   BSP_PIN19        PDin(0)
#define   BSP_PIN20        PCin(6)

#define   BSP_PIN21        PEin(3)
#define   BSP_PIN22        PEin(4)

/*
*********************************************************************************************************
*                                               INT DEFINES
*********************************************************************************************************
*/

#define  BSP_INT_ID_WWDG                                   0    /* Window WatchDog Interrupt                            */
#define  BSP_INT_ID_PVD                                    1    /* PVD through EXTI Line detection Interrupt            */
#define  BSP_INT_ID_TAMPER                                 2    /* Tamper Interrupt                                     */
#define  BSP_INT_ID_RTC                                    3    /* RTC global Interrupt                                 */
#define  BSP_INT_ID_FLASH                                  4    /* FLASH global Interrupt                               */
#define  BSP_INT_ID_RCC                                    5    /* RCC global Interrupt                                 */
#define  BSP_INT_ID_EXTI0                                  6    /* EXTI Line0 Interrupt                                 */
#define  BSP_INT_ID_EXTI1                                  7    /* EXTI Line1 Interrupt                                 */
#define  BSP_INT_ID_EXTI2                                  8    /* EXTI Line2 Interrupt                                 */
#define  BSP_INT_ID_EXTI3                                  9    /* EXTI Line3 Interrupt                                 */
#define  BSP_INT_ID_EXTI4                                 10    /* EXTI Line4 Interrupt                                 */
#define  BSP_INT_ID_DMA1_CH1                              11    /* DMA1 Channel 1 global Interrupt                      */
#define  BSP_INT_ID_DMA1_CH2                              12    /* DMA1 Channel 2 global Interrupt                      */
#define  BSP_INT_ID_DMA1_CH3                              13    /* DMA1 Channel 3 global Interrupt                      */
#define  BSP_INT_ID_DMA1_CH4                              14    /* DMA1 Channel 4 global Interrupt                      */
#define  BSP_INT_ID_DMA1_CH5                              15    /* DMA1 Channel 5 global Interrupt                      */
#define  BSP_INT_ID_DMA1_CH6                              16    /* DMA1 Channel 6 global Interrupt                      */
#define  BSP_INT_ID_DMA1_CH7                              17    /* DMA1 Channel 7 global Interrupt                      */
#define  BSP_INT_ID_ADC1_2                                18    /* ADC1 et ADC2 global Interrupt                        */
#define  BSP_INT_ID_CAN1_TX                               19    /* CAN1 TX Interrupts                                   */
#define  BSP_INT_ID_CAN1_RX0                              20    /* CAN1 RX0 Interrupts                                  */
#define  BSP_INT_ID_CAN1_RX1                              21    /* CAN1 RX1 Interrupt                                   */
#define  BSP_INT_ID_CAN1_SCE                              22    /* CAN1 SCE Interrupt                                   */
#define  BSP_INT_ID_EXTI9_5                               23    /* External Line[9:5] Interrupts                        */
#define  BSP_INT_ID_TIM1_BRK                              24    /* TIM1 Break Interrupt                                 */
#define  BSP_INT_ID_TIM1_UP                               25    /* TIM1 Update Interrupt                                */
#define  BSP_INT_ID_TIM1_TRG_COM                          26    /* TIM1 Trigger and Commutation Interrupt               */
#define  BSP_INT_ID_TIM1_CC                               27    /* TIM1 Capture Compare Interrupt                       */
#define  BSP_INT_ID_TIM2                                  28    /* TIM2 global Interrupt                                */
#define  BSP_INT_ID_TIM3                                  29    /* TIM3 global Interrupt                                */
#define  BSP_INT_ID_TIM4                                  30    /* TIM4 global Interrupt                                */
#define  BSP_INT_ID_I2C1_EV                               31    /* I2C1 Event Interrupt                                 */
#define  BSP_INT_ID_I2C1_ER                               32    /* I2C1 Error Interrupt                                 */
#define  BSP_INT_ID_I2C2_EV                               33    /* I2C2 Event Interrupt                                 */
#define  BSP_INT_ID_I2C2_ER                               34    /* I2C2 Error Interrupt                                 */
#define  BSP_INT_ID_SPI1                                  35    /* SPI1 global Interrupt                                */
#define  BSP_INT_ID_SPI2                                  36    /* SPI2 global Interrupt                                */
#define  BSP_INT_ID_USART1                                37    /* USART1 global Interrupt                              */
#define  BSP_INT_ID_USART2                                38    /* USART2 global Interrupt                              */
#define  BSP_INT_ID_USART3                                39    /* USART3 global Interrupt                              */
#define  BSP_INT_ID_EXTI15_10                             40    /* External Line[15:10] Interrupts                      */
#define  BSP_INT_ID_RTC_ALARM                             41    /* RTC Alarm through EXTI Line Interrupt                */
#define  BSP_INT_ID_OTG_FS_WKUP                           42    /* USB WakeUp from suspend through EXTI Line Interrupt  */

#define  BSP_INT_ID_TIM5                                  50    /* TIM5 global Interrupt                                */
#define  BSP_INT_ID_SPI3                                  51    /* SPI3 global Interrupt                                */
#define  BSP_INT_ID_USART4                                52    /* USART4 global Interrupt                              */
#define  BSP_INT_ID_USART5                                53    /* USRT5 global Interrupt                               */
#define  BSP_INT_ID_TIM6                                  54    /* TIM6 global Interrupt                                */
#define  BSP_INT_ID_TIM7                                  55    /* TIM7 global Interrupt                                */
#define  BSP_INT_ID_DMA2_CH1                              56    /* DMA2 Channel 1 global Interrupt                      */
#define  BSP_INT_ID_DMA2_CH2                              57    /* DMA2 Channel 2 global Interrupt                      */
#define  BSP_INT_ID_DMA2_CH3                              58    /* DMA2 Channel 3 global Interrupt                      */
#define  BSP_INT_ID_DMA2_CH4                              59    /* DMA2 Channel 4 global Interrupt                      */
#define  BSP_INT_ID_DMA2_CH5                              60    /* DMA2 Channel 5 global Interrupt                      */

#define  BSP_INT_ID_ETH                                   61    /* ETH  global Interrupt                                */
#define  BSP_INT_ID_ETH_WKUP                              62    /* ETH  WakeUp from EXTI line interrupt                 */
#define  BSP_INT_ID_CAN2_TX                               63    /* CAN2 TX Interrupts                                   */
#define  BSP_INT_ID_CAN2_RX0                              64    /* CAN2 RX0 Interrupts                                  */
#define  BSP_INT_ID_CAN2_RX1                              65    /* CAN2 RX1 Interrupt                                   */
#define  BSP_INT_ID_CAN2_SCE                              66    /* CAN2 SCE Interrupt                                   */
#define  BSP_INT_ID_OTG_FS                                67    /* OTG global Interrupt                                 */


/*
*********************************************************************************************************
*                                             PERIPH DEFINES
*********************************************************************************************************
*/

#define  BSP_PERIPH_ID_DMA1                                0
#define  BSP_PERIPH_ID_DMA2                                1
#define  BSP_PERIPH_ID_SRAM                                2
#define  BSP_PERIPH_ID_FLITF                               4
#define  BSP_PERIPH_ID_CRC                                 6
#define  BSP_PERIPH_ID_OTGFS                              12
#define  BSP_PERIPH_ID_ETHMAC                             14
#define  BSP_PERIPH_ID_ETHMACTX                           15

#define  BSP_PERIPH_ID_AFIO                               32
#define  BSP_PERIPH_ID_IOPA                               34
#define  BSP_PERIPH_ID_IOPB                               35
#define  BSP_PERIPH_ID_IOPC                               36
#define  BSP_PERIPH_ID_IOPD                               37
#define  BSP_PERIPH_ID_IOPE                               38
#define  BSP_PERIPH_ID_ADC1                               41
#define  BSP_PERIPH_ID_ADC2                               42
#define  BSP_PERIPH_ID_TIM1                               43
#define  BSP_PERIPH_ID_SPI1                               44
#define  BSP_PERIPH_ID_USART1                             46

#define  BSP_PERIPH_ID_TIM2                               64
#define  BSP_PERIPH_ID_TIM3                               65
#define  BSP_PERIPH_ID_TIM4                               66
#define  BSP_PERIPH_ID_TIM5                               67
#define  BSP_PERIPH_ID_TIM6                               68
#define  BSP_PERIPH_ID_TIM7                               69
#define  BSP_PERIPH_ID_WWDG                               75
#define  BSP_PERIPH_ID_SPI2                               78
#define  BSP_PERIPH_ID_SPI3                               79
#define  BSP_PERIPH_ID_USART2                             81
#define  BSP_PERIPH_ID_USART3                             82
#define  BSP_PERIPH_ID_USART4                             83
#define  BSP_PERIPH_ID_USART5                             84
#define  BSP_PERIPH_ID_I2C1                               85
#define  BSP_PERIPH_ID_I2C2                               86
#define  BSP_PERIPH_ID_CAN1                               89
#define  BSP_PERIPH_ID_CAN2                               90
#define  BSP_PERIPH_ID_BKP                                91
#define  BSP_PERIPH_ID_PWR                                92
#define  BSP_PERIPH_ID_DAC                                93



/*
*********************************************************************************************************
*                                               MODBUS DEFINE
*********************************************************************************************************
*/

/*----------------------  register address ----------------------------------*/   
#define    SRegisAdd1       1 	 
#define    SRegisAdd2       2	  	
#define    SRegisAdd3       3 	  //Rµ„∆´“∆
#define    SRegisAdd4       4     //Lµ„∆´“∆
#define    SRegisAdd5       5     //µÁª˙∑µªÿÀŸ¬ 
#define    SRegisAdd6       6 	  //left–˝◊™ÀŸ¬ 
#define    SRegisAdd7       7 	  //left–˝◊™Ω«∂»≤π≥•cw
#define    SRegisAdd8       8 	  //right–˝◊™ÀŸ¬ 
#define    SRegisAdd9       9 	  //right–˝◊™Ω«∂»≤π≥•ccw
#define    SRegisAdd10      10    //left◊Ó¥Û÷µ
#define    SRegisAdd11      11	  //±®æØ ±º‰			
#define    SRegisAdd12      12	  //right◊Ó¥Û÷µ

#define    SRegisAdd13      13				
#define    SRegisAdd14      14				
#define    SRegisAdd16      16 	  
#define    SRegisAdd17      17 	  
#define    SRegisAdd18      18 	  
#define    SRegisAdd19      19 	  

#define    SRegisAdd20      20	  // ÷∂ØleftÀŸ∂»
#define    SRegisAdd21      21	  // ÷∂ØrightÀŸ∂»
#define    SRegisAdd22      22	  //¬Û¿≠Ã˘∫œ—” ±

#define    SRegisAdd23      23    //MID∂®Œª—” ±
#define    SRegisAdd24      24 	  //LR∂®Œª—” ±
#define    SRegisAdd25      25	  //¥Úø™’Êø’Œ¸∫ÛLR «∑Ò—” ±∫Û≥∑ ±º‰

//—π¡¶–£◊ºΩÁ√Ê≤Œ ˝
#define    SRegisAdd26      26 	  // 0kg
#define    SRegisAdd27      27 	  // 3kg
#define    SRegisAdd28      28 	  // 5kg

#define    SRegisAdd29      29 	  
#define    SRegisAdd30      30 	 
#define    SRegisAdd31      31 	  
#define    SRegisAdd32      32 	 
#define    SRegisAdd33      33 	  
#define    SRegisAdd34      34    

#define    SRegisAdd35      35    //‘≠ º√‹¬Î
#define    SRegisAdd37      37    //–¬√‹¬Î 
#define    SRegisAdd39      39    //»∑»œ√‹¬Î

#define    SRegisAdd41      41    //41-42 gross_counters
#define    SRegisAdd43      43  

//------------------------------------------------------------------------------
#define    NRegisAdd1       101		 //101 Ω«∂»

#define    NRegisAdd2       102          //102 Ω«∂»

#define    NRegisAdd3       103          //¬Û¿≠µπº∆ ±œ‘ æ

#define    NRegisAdd4       105          
#define    NRegisAdd5       106         //106 ◊‘∂Ø/ ÷∂Ø◊¥Ã¨œ‘ æ  
#define    NRegisAdd6       107 

#define    NRegisAdd7       109         // speedsteps  
#define    NRegisAdd8       110 

#define    NRegisAdd9       111         //1#£¨π˝≥Ãøÿ÷∆
#define    NRegisAdd10      112         //2#£¨π˝≥Ãøÿ÷∆
#define    NRegisAdd11      113         //3#£¨π˝≥Ãøÿ÷∆
#define    NRegisAdd12      114         //4#£¨π˝≥Ãøÿ÷∆

#define    NRegisAdd13      115         //—≠ª∑º∆ ˝
#define    NRegisAdd14      116         //ª≠√Ê«–ªªµÿ÷∑
#define    NRegisAdd15      117         //adc1
#define    NRegisAdd16      118         //adc2
#define    NRegisAdd17      119
#define    NRegisAdd18      120

#define    NRegisAdd21      121         //∞Ê±æ–≈œ¢ 121--130

#define    NRegisAdd32      131

/*---------------------- coils  address ----------------------------------*/
#define    SCoilAdd1        1   
#define    SCoilAdd2        2   //º‡ ”µÿ÷∑---±®æØÀ¯∂®
#define    SCoilAdd3        3   //±®æØ∏¥Œª
#define    SCoilAdd4        4   //∏ﬂÀŸ◊¥Ã¨À¯∂®
#define    SCoilAdd5        5   //‘≠µ„◊¥Ã¨À¯∂®
#define    SCoilAdd6        6   //∏ﬂÀŸ◊¥Ã¨À¯∂®
#define    SCoilAdd7        7   //‘≠µ„◊¥Ã¨À¯∂®
#define    SCoilAdd8        8   //LEFT‘≠µ„∆´÷√∑ΩœÚ…Ë÷√
#define    SCoilAdd9        9   //right‘≠µ„∆´÷√∑ΩœÚ…Ë÷√
#define    SCoilAdd10       10  //right‘≠µ„∆´÷√∑ΩœÚ…Ë÷√

#define    NCoilAdd1        401      //coil 1--400 write in eepram 400--800 not save
//-----------¥´∏–∆˜◊¥Ã¨µÿ÷∑----------------
#define    NCoilAdd2        402     //1#
#define    NCoilAdd3        403     //2# 
#define    NCoilAdd4        404     //3#
#define    NCoilAdd5        405     //4#
#define    NCoilAdd6        406     //5#
#define    NCoilAdd7        407     //6#
#define    NCoilAdd8        408     //7#
#define    NCoilAdd9        409     //8#
#define    NCoilAdd10       410     //9#
#define    NCoilAdd11       411     //10# 
#define    NCoilAdd12       412     //11# 
#define    NCoilAdd13       413     //12# 
#define    NCoilAdd14       414     //13# 
#define    NCoilAdd15       415     //14# 
#define    NCoilAdd16       416     //15# 
#define    NCoilAdd17       417     //16# 
#define    NCoilAdd18       418     //17#    
#define    NCoilAdd19       419     //18#  
#define    NCoilAdd20       420     //19#    
#define    NCoilAdd21       421     //20#   
#define    NCoilAdd22       422     //21#    
#define    NCoilAdd23       423     //22#  
// ‰≥ˆ≤‚ ‘∞¥≈•
#define    NCoilAdd24      424  //1#    
#define    NCoilAdd25      425  //2#    
#define    NCoilAdd26      426  //3#    
#define    NCoilAdd27      427  //4#    
#define    NCoilAdd28      428  //5#    
#define    NCoilAdd29      429  //6#    
#define    NCoilAdd30      430  //7#    
#define    NCoilAdd31      431  //8#    
#define    NCoilAdd32      432  //9#    
#define    NCoilAdd33      433  //10#    
#define    NCoilAdd34      434  //11#  
#define    NCoilAdd35      435  //12#  

#define    NCoilAdd440        440    //«Â≥ˆBUTTON
#define    NCoilAdd441        441    //LEFTƒÊ ±’Î
#define    NCoilAdd442        442    //LEFTÀ≥ ±÷”
#define    NCoilAdd443        443    //rightƒÊ ±’Î
#define    NCoilAdd444        444    //rightÀ≥ ±÷”

#define    NCoilAdd445        445    //
#define    NCoilAdd446        446    //
#define    NCoilAdd447        447    //
#define    NCoilAdd448        448    //
#define    NCoilAdd449        449    //
#define    NCoilAdd450        450    //
#define    NCoilAdd451        451    //
#define    NCoilAdd452        452    //∏¸–¬≤Œ ˝
#define    NCoilAdd453        453    //
#define    NCoilAdd454        454    //
#define    NCoilAdd455        455    //
//–¥»Î±£≥÷µÿ÷∑»∑»œ∞¥≈•
#define    NCoilAdd434       434     //1# »∑»œ
#define    NCoilAdd435       435     //2# »∑»œ
#define    NCoilAdd436       436     //2# »∑»œ

//√‹¬Î»∑»œ∞¥≈•
#define    NCoilAdd438       438     //1# √‹¬Î»∑»œ  
#define    NCoilAdd439       439     //1#  

#define    ModbusAdd(n)    n*2-1  

//µÁª˙œ‡πÿ≤Œ ˝
#define    FreqCLK          72000000
#define    RISE             0		
#define    DROP             1		
#define    SUBDIVISION      3200
#define    COMPENSATE       10

/*
*********************************************************************************************************
*                                               DATA TYPES
*********************************************************************************************************
*/
//Sensor_Status_Flag¥´∏–∆˜◊¥Ã¨±£¥Ê
typedef struct {
      CPU_INT08U F_x0:1; 
      CPU_INT08U F_x1:1; 
      CPU_INT08U F_x2:1; 
      CPU_INT08U F_x3:1; 
      CPU_INT08U F_x4:1; 
      CPU_INT08U F_x5:1;  
      CPU_INT08U F_x6:1; 
      CPU_INT08U F_x7:1;
      
      CPU_INT08U F_x8:1; 
      CPU_INT08U F_x9:1; 
      CPU_INT08U F_x10:1; 
      CPU_INT08U F_x11:1; 
      CPU_INT08U F_x12:1; 
      CPU_INT08U F_x13:1;  
      CPU_INT08U F_x14:1; 
      CPU_INT08U F_x15:1;
      
      CPU_INT08U F_x16:1; 
      CPU_INT08U F_x17:1;  
      CPU_INT08U F_x18:1; 
      CPU_INT08U F_x19:1;

      CPU_INT08U F_x20:1; 
      CPU_INT08U F_x21:1;
      
      CPU_INT08U F_TP_CSW:1;        
      CPU_INT08U F_RASTER:1;   
      
}Sensor_Status_Flag;

//Fixture_Status_Flagœ‡πÿ±Í÷æŒª
typedef struct {
      CPU_INT08U F_ALARM:1   ;  //±®æØ 
      
      CPU_INT08U F_AUTO:1    ;  //◊‘∂Ø
      CPU_INT08U F_MANUAL:1  ;  // ÷∂Ø 
      CPU_INT08U F_CYCLE:1   ;  //—≠ª∑≤‚ ‘ƒ£ Ω
      CPU_INT08U F_RESET:1   ;  //∏¥ŒªÕÍ≥…
      CPU_INT08U F_START:1   ;  //∆Ù∂Ø
      CPU_INT08U F_ALARMMODE ;  //±®æØƒ£ Ω1,2£¨---255
      CPU_INT08U F_LRElATIVE:1;  //Lœ‡∂‘Œª÷√
      CPU_INT08U F_LABS:1;       //Læ¯∂‘Œª÷√
      CPU_INT08U F_RRElATIVE:1;  //Rœ‡∂‘Œª÷√
      CPU_INT08U F_RABS:1;       //Ræ¯∂‘Œª÷√     
      CPU_INT08U F_USART1EN:1;   //¥Æø⁄1 πƒ‹
      //X÷·
      CPU_INT08U F_XFRONT:1  ;         
      CPU_INT08U F_XBACK:1   ; 
      CPU_INT08U F_XSTOP:1   ;        //XµÁª˙Õ£÷π
      CPU_INT08U F_XDISTENCEEND:1;    //––≥Ãend  
      
      //Y÷·£¨¡Ω◊ÈµÁª˙
      CPU_INT08U F_YLEFT_CW:1;        //”“À≥ ±’Î 
      CPU_INT08U F_YLEFT_CCW:1;       //”“À≥ ±’Î
      CPU_INT08U F_YLEFTSTOP:1   ;    //”“µÁª˙Õ£÷π
      CPU_INT08U F_YLEFTDISTENCEEND:1;//”“µÁª˙––≥Ãend 
      CPU_INT08U F_YLEFTRESET:1;      //”“µÁª˙∏¥Œª◊¥Ã¨
  
      CPU_INT08U F_YRIGHT_CW:1  ;       //◊ÛƒÊ ±’Î
      CPU_INT08U F_YRIGHT_CCW:1;        //◊ÛƒÊ ±’Î     
      CPU_INT08U F_YRIGHTSTOP:1;        //◊ÛµÁª˙Õ£÷π
      CPU_INT08U F_YRIGHTDISTENCEEND:1; //◊ÛµÁª˙––≥Ãend   
      CPU_INT08U F_YLRIGHTRESET:1;      //◊ÛµÁª˙∏¥Œª◊¥Ã¨ 
      
       //Z÷·  
      CPU_INT08U F_ZRISE:1   ;         
      CPU_INT08U F_ZDROP:1   ;
      CPU_INT08U F_ZSTOP:1   ;        //ZµÁª˙Õ£÷π
      CPU_INT08U F_ZDISTENCEEND:1;    //––≥Ãend        
}Fixture_Status_Flag;



/*
*********************************************************************************************************
*                                            GLOBAL VARIABLES
*********************************************************************************************************
*/
EXT Fixture_Status_Flag   AppTask_Fixture_Status;
EXT Sensor_Status_Flag    AppTask_Sensor_Status;

/*
*********************************************************************************************************
*                                                 MACRO'S
*********************************************************************************************************
*/


/*
*********************************************************************************************************
*                                           FUNCTION PROTOTYPES
*********************************************************************************************************
*/

void         BSP_Init                    (void);

void         BSP_IntDisAll               (void);

CPU_INT32U   BSP_CPU_ClkFreq             (void);


/*
*********************************************************************************************************
*                                           INTERRUPT SERVICES
*********************************************************************************************************
*/

void         BSP_IntInit                 (void);

void         BSP_IntEn                   (CPU_DATA       int_id);

void         BSP_IntDis                  (CPU_DATA       int_id);

void         BSP_IntClr                  (CPU_DATA       int_id);

void         BSP_IntVectSet              (CPU_DATA       int_id,
                                          CPU_FNCT_VOID  isr);

void         BSP_IntPrioSet              (CPU_DATA       int_id,
                                          CPU_INT08U     prio);

void         BSP_IntHandlerWWDG          (void);
void         BSP_IntHandlerPVD           (void);
void         BSP_IntHandlerTAMPER        (void);
void         BSP_IntHandlerRTC           (void);
void         BSP_IntHandlerFLASH         (void);
void         BSP_IntHandlerRCC           (void);
void         BSP_IntHandlerEXTI0         (void);
void         BSP_IntHandlerEXTI1         (void);
void         BSP_IntHandlerEXTI2         (void);
void         BSP_IntHandlerEXTI3         (void);
void         BSP_IntHandlerEXTI4         (void);
void         BSP_IntHandlerDMA1_CH1      (void);
void         BSP_IntHandlerDMA1_CH2      (void);
void         BSP_IntHandlerDMA1_CH3      (void);
void         BSP_IntHandlerDMA1_CH4      (void);
void         BSP_IntHandlerDMA1_CH5      (void);

void         BSP_IntHandlerDMA1_CH6      (void);
void         BSP_IntHandlerDMA1_CH7      (void);
void         BSP_IntHandlerADC1_2        (void);
void         BSP_IntHandlerCAN1_TX       (void);
void         BSP_IntHandlerCAN1_RX0      (void);
void         BSP_IntHandlerCAN1_RX1      (void);
void         BSP_IntHandlerCAN1_SCE      (void);
void         BSP_IntHandlerEXTI9_5       (void);
void         BSP_IntHandlerTIM1_BRK      (void);
void         BSP_IntHandlerTIM1_UP       (void);
void         BSP_IntHandlerTIM1_TRG_COM  (void);
void         BSP_IntHandlerTIM1_CC       (void);
void         BSP_IntHandlerTIM2          (void);
void         BSP_IntHandlerTIM3          (void);
void         BSP_IntHandlerTIM4          (void);
void         BSP_IntHandlerI2C1_EV       (void);

void         BSP_IntHandlerI2C1_ER       (void);
void         BSP_IntHandlerI2C2_EV       (void);
void         BSP_IntHandlerI2C2_ER       (void);
void         BSP_IntHandlerSPI1          (void);
void         BSP_IntHandlerSPI2          (void);
void         BSP_IntHandlerUSART1        (void);
void         BSP_IntHandlerUSART2        (void);
void         BSP_IntHandlerUSART3        (void);
void         BSP_IntHandlerEXTI15_10     (void);
void         BSP_IntHandlerRTCAlarm      (void);
void         BSP_IntHandlerUSBWakeUp     (void);

void         BSP_IntHandlerTIM5          (void);
void         BSP_IntHandlerSPI3          (void);
void         BSP_IntHandlerUSART4        (void);
void         BSP_IntHandlerUSART5        (void);
void         BSP_IntHandlerTIM6          (void);
void         BSP_IntHandlerTIM7          (void);
void         BSP_IntHandlerDMA2_CH1      (void);
void         BSP_IntHandlerDMA2_CH2      (void);
void         BSP_IntHandlerDMA2_CH3      (void);
void         BSP_IntHandlerDMA2_CH4      (void);
void         BSP_IntHandlerDMA2_CH5      (void);
void         BSP_IntHandlerETH           (void);
void         BSP_IntHandlerETHWakeup     (void);
void         BSP_IntHandlerCAN2_TX       (void);
void         BSP_IntHandlerCAN2_RX0      (void);
void         BSP_IntHandlerCAN2_RX1      (void);
void         BSP_IntHandlerCAN2_SCE      (void);
void         BSP_IntHandlerOTG           (void);


/*
*********************************************************************************************************
*                                     PERIPHERAL POWER/CLOCK SERVICES
*********************************************************************************************************
*/

CPU_INT32U   BSP_PeriphClkFreqGet        (CPU_DATA       pwr_clk_id);

void         BSP_PeriphEn                (CPU_DATA       pwr_clk_id);

void         BSP_PeriphDis               (CPU_DATA       pwr_clk_id);


/*
*********************************************************************************************************
*                                              LED SERVICES
*********************************************************************************************************
*/
void Checkparama_AND_Inital(void);

/*
*********************************************************************************************************
*                                              STATUS INPUTS
*********************************************************************************************************
*/


/*
*********************************************************************************************************
*                                             MODULE END
*********************************************************************************************************
*/


#endif                                                          /* End of module include.                               */
